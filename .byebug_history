q
test = general_content.css('p')[1].text
general_content.css('p')[1].text
general_content.css('p').first.text
general_content.css('p').first
general_content.css('strong')[3].text
general_content.css('br')[3].text
general_content.css('br')[2].text
general_content.css('br')[1].text
general_content.css('br').first.text
general_content.css('br').count
general_content.css('br').cont
general_content.css('p')[1].text
general_content.css('p')[1]
general_content.css('p')[0]
general_content.css('p')[10].text
general_content.css('p')[11].text
general_content.css('p')[12].text
general_content.css('p')[13].text
general_content.css('p')[3].text
general_content.css('p')[2\4].text
general_content.css('p')[2].text
general_content.css('p')[1].text
general_content.css('p').first.text
general_content.css('p').first
general_content.css('p').count
general_content.css('p').first.text
general_content.css('a').first.text
general_content.css('a').count
general_content = parsed_page.css('div.general-content')
parsed_page.css('a').first.text
parsed_page.css('a').count
q
general_content.css('span').count
general_content.css('span').text.count
general_content.css('span').text.each do |text|
general_content.css('span').text
general_content.css('span').count
titles.count
titles
q
general_content.css('a').last.text
general_content.css('a').first.text
general_content.css('a')[1].text
general_content.css('a')[1]
general_content.css('a').count
general_content.css('span')[10].text
general_content.css('span')[4].text
general_content.css('span')[2].text
general_content.css('span')[1].text
general_content.css('span').first.text
general_content.css('span').first
general_content.css('span').count
general_content.css('p.text_align').count
general_content.css('p.text_align:').count
general_content.css('p.text_align: center').count
general_content.css('a').first.text
general_content.css('a').first
general_content.css('a').count
general_content = parsed_page.css('div.general-content')
general_content = parsed_page.css('div.general-content').count
parsed_page.css('div.general-content').count
parsed_page.css('div.general-content')
parsed_page.css('a')[65].text
parsed_page.css('a')[70].text
parsed_page.css('a')[7].text
parsed_page.css('a')[6].text
parsed_page.css('a')[4].text
parsed_page.css('a')[3].text
parsed_page.css('a')[80].text
parsed_page.css('a')[90].text
parsed_page.css('a')[91].text
parsed_page.css('a').last.text
parsed_page.css('a')[40].text
parsed_page.css('a')[10].text
parsed_page.css('a').first.text
parsed_page.css('a').count
parsed_page.css('a')
parsed_page.css('a.')
q
parsed_page
q
 second_section.css('p.typography--baseline-spacing').first.text.include?("S")
 second_section.css('p.typography--baseline-spacing').first.text
 second_section.css('p.typography--baseline-spacing').first
 second_section.css('p.typography--baseline-spacing').count
 second_section.css('p.balance-text').count
 second_section.css('p.typography--baseline-spacing').first.text
 second_section.css('p.typography--baseline-spacing').first
 second_section.css('p.typography--baseline-spacing').count
 second_section.css('p.typography--baseline-spacing')
poop[0] == poop[1]
poop[0]
poop << second_section.css('p.typography--hyphenate')[16].text
second_section.css('p.typography--hyphenate')[16].text
poop << second_section.css('p.typography--hyphenate')[15].text
poop = []
second_section.css('p.typography--hyphenate')[15].text
second_section.css('p.typography--hyphenate')[14].text
second_section.css('p.typography--hyphenate')[13].text
second_section.css('p.typography--hyphenate')[12].text
second_section.css('p.typography--hyphenate')[3].text
second_section.css('p.typography--hyphenate')[2].text
second_section.css('p.typography--hyphenate')[1].text
second_section.css('p.typography--hyphenate')[0].text
second_section.css('p.typography--hyphenate')[0]
second_section.css('p.balance-text').count
second_section.css('p.typography--hyphenate').count
second_section.css('p.typography--hyphenate').first.text
second_section.css('p.typography--hyphenate').first
second_section.css('p.typography--var--size:large').first
second_section.css('p.typography--var--size:large').first.text
(byebug) second_section.css('p.balance-text')[4]
"Through JanuaryÂ 4, 2020"
(byebug) second_section.css('p.balance-text')[3].text
"The Legends of Black Girlâ€™s Window"
(byebug) second_section.css('p.balance-text')[2].text
"Betye Saar"
1].text
second_section.css('p.balance-text')[9].text == "MoMA"
second_section.css('p.balance-text')[14].text
second_section.css('p.balance-text')[13].text
second_section.css('p.balance-text')[12].text
info = second_section.css('p.balance-text')
second_section.css('p.balance-text')[10].text
second_section.css('p.balance-text')[9].text
second_section.css('p.balance-text')[8].text
second_section.css('p.balance-text')[7].text
second_section.css('p.balance-text')[6].text
second_section.css('p.balance-text')[5].text
second_section.css('p.balance-text')[4].text
second_section.css('p.balance-text')[3].text
second_section.css('p.balance-text')[2].text
second_section.css('p.balance-text')[1].text
second_section.css('p.balance-text').first.text
second_section.css('p.balance-text').count
second_section = main.css('section.page-section--full-bleed')[1]
main.css('section.page-section--full-bleed')[1].text
main.css('section.page-section--full-bleed')[1]
main.css('section.page-section--full-bleed').first.text
main.css('section.page-section--full-bleed').count.first
main.css('section.page-section--full-bleed').count
main = parsed_page.css('main.main')
parsed_page.css('main.main').count
parsed_page.css('p.balance-text').last.text
parsed_page.css('p.balance-text').count
parsed_page.css('p.balance-text').first.text
parsed_page.css('p.balance-text').first
parsed_page.css('p.balance-text')
parsed_page
q
parsed_page.css('body.l-template-b')
parsed_page.css('div.grid-listing')
parsed_page.css('div.grid-listing').first
parsed_page
q
headers.first[:title]
headers.first[title]
headers.first(:title)
headers.first
headers.count
headers
headers.count
q
headers
headers.count
q
non_featured_exhibitions.count
q
non_featured_exhibitions = current_exhibitions.css('div.exhibitions__list')q
headers.first(:title)
headers.first.title
headers.first
headers.count
headers
continue
header[:dates]
header[:title]
continue
header[:dates]
header[:title]
header[:dates]
header[:title]
q
bye
end
current_featured_headers.count
current_featured_headers = featured_exhibitions.css('div.list-item__header')
featured_exhibitions = current_exhibitions.css('div.exhibitions__featured-list')
current_exhibitions.count
current_titles.each do |title|
current_titles.count
current_titles[3].css('h2.list-item__title').text
current_titles[2].css('h2.list-item__title').text
current_titles[1].css('h2.list-item__title').text
current_titles.last.css('h2.list-item__subtitle').text
current_titles.last.css('h2.list-item__title').text
current_titles.first.css('h2.list-item__subtitle').text
current_titles.first.css('h2.list-item__title').text
current_titles.first.text
current_titles.first
current_titles = current_exhibitions.css('div.list-item__header')
current_exhibitions.css('div.list-item__header').count
current_exhibitions.css('div.list-item__header')
current_exhibitions = exhibitions.css('section').first
current_exhibitions.count
current_exhibitions = exhibitions.css('section').first
exhibitions.css('section').first
exhibitions.css('section').count
exhibitions.css('section')
exhibitions = parsed_page.css('div.exhibitions')
parsed_page.css('div.exhibitions')
titles[1].css('h2.list-item__title').inner_html
titles[1].css('h2.list-item__title').text
titles[1].css('h2.list-item__title')
titles[1]
titles(1)
titles.first
first_title
last
last.css('h2.list-item__title')
last = titles.last
titles.last.css('h2.list-item__title')
titles.last
first_title.css('h2.list-item__title').text
first_title.css('h2.list-item__subtitle').text
first_title.css('h2.list-item__subtitle')
first_title.css('h2.list-item__title')
first
first_title
first_title.css.('header.list_item__title')
first_title.css.('h2.title')
first_title.css.('h2.list-item__title')
first_title = titles.first
titles.first
titles.count
titles = parsed_page.css('div.list-item__header')
parsed_page.css('div.list-item__header')
parsed_page
exit
end
parsed_page.css('div.card__title')
parsed_page.css('div.card__text')
parsed_page.css('card__text')
parsed_page.h2
parsed_page.card__text
parsed_page.card_text
parsed_page.head
parsed_page.count
parsed_page
unparsed_page
